{"version":3,"file":"static/js/186.67ebf722.chunk.js","mappings":"yNAgCA,UA5BgB,WAAO,IAAD,EACpB,GAA8BA,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACMC,GAAUC,EAAAA,EAAAA,OAChBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,8GAEOC,EAAAA,EAAAA,IAAaJ,GAFpB,OAETF,EAFS,OAGfC,EAAWD,GAHI,gDAKfO,QAAQC,IAAR,MALe,yDAAH,qDAQhBH,GACD,GAAE,CAACH,IAEJ,IAAMO,EAAU,OAAGT,QAAH,IAAGA,GAAH,UAAGA,EAASU,eAAZ,aAAG,EAAkBC,KAAI,SAAAC,GAAE,OACzC,2BACE,wBAAKA,EAAGC,UACR,uBAAID,EAAGE,YAFAF,EAAGG,GAD6B,IAM3C,OACE,+BACU,OAAPf,QAAO,IAAPA,OAAA,EAAAA,EAASU,QAAQM,QAAS,GAAI,wBAAKP,KAAmB,uCAG5D,C,8LC5BDQ,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAmB,mCAAG,oGACVF,EAAAA,EAAAA,IAAA,sCAAyCC,IAD/B,cAC3BE,EAD2B,yBAE1BA,EAASC,MAFiB,2CAAH,qDAKnBC,EAAU,mCAAG,8FAASP,EAAT,EAASA,GAAT,SACDE,EAAAA,EAAAA,IAAA,iBAAoBF,EAApB,oBAAkCG,IADjC,cAClBE,EADkB,yBAEjBA,EAASC,MAFQ,2CAAH,sDAKVE,EAAS,mCAAG,8FAASR,EAAT,EAASA,GAAT,SACAE,EAAAA,EAAAA,IAAA,iBAAoBF,EAApB,4BAA0CG,IAD1C,cACjBE,EADiB,yBAEhBA,EAASC,MAFO,2CAAH,sDAKTf,EAAY,mCAAG,8FAASS,EAAT,EAASA,GAAT,SACHE,EAAAA,EAAAA,IAAA,iBAAoBF,EAApB,4BAA0CG,IADvC,cACpBE,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKZG,EAAgB,mCAAG,WAAMC,GAAN,uFACPR,EAAAA,EAAAA,IAAA,4DACgCC,EADhC,kBACiDO,EADjD,+CADO,cACxBL,EADwB,yBAIvBA,EAASC,MAJc,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","components/api.js"],"sourcesContent":["import { fetchReviews } from 'components/api';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState(null);\n  const movieId = useParams();\n  useEffect(() => {\n    const getApiInfo = async () => {\n      try {\n        const reviews = await fetchReviews(movieId);\n        setReviews(reviews);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getApiInfo();\n  }, [movieId]);\n\n  const reviewsArr = reviews?.results?.map(el => (\n    <li key={el.id}>\n      <h4>{el.author}</h4>\n      <p>{el.content}</p>\n    </li>\n  ));\n  return (\n    <>\n      {reviews?.results.length > 0 ? <ul>{reviewsArr}</ul> : <p>No reviews</p>}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'aa64369a7a4c070f2ae72e49aca3d158';\n\nexport const fetchDayPopularFilm = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchMovie = async ({ id }) => {\n  const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchCast = async ({ id }) => {\n  const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchReviews = async ({ id }) => {\n  const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchSearchMovie = async query => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}&include_adult=false&language=en-US&page=1`\n  );\n  return response.data;\n};\n"],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","getApiInfo","fetchReviews","console","log","reviewsArr","results","map","el","author","content","id","length","axios","API_KEY","fetchDayPopularFilm","response","data","fetchMovie","fetchCast","fetchSearchMovie","query"],"sourceRoot":""}
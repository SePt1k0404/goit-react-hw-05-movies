{"version":3,"file":"static/js/247.802231b8.chunk.js","mappings":"yNAsCA,UAlCa,WAAO,IAAD,EACjB,GAAwBA,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACMC,GAAUC,EAAAA,EAAAA,OAChBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,8GAEIC,EAAAA,EAAAA,GAAUJ,GAFd,OAETF,EAFS,OAGfC,EAAQD,GAHO,gDAKfO,QAAQC,IAAR,MALe,yDAAH,qDAQhBH,GACD,GAAE,CAACH,IAEJ,IAAMO,EAAO,OAAGT,QAAH,IAAGA,GAAH,UAAGA,EAAMA,YAAT,aAAG,EAAYU,KAAI,SAAAC,GAAE,OAChC,2BACE,gBACEC,MAAO,CAAEC,MAAO,SAChBC,IACI,OAAFH,QAAE,IAAFA,GAAAA,EAAII,aAAJ,oDAC0CJ,QAD1C,IAC0CA,OAD1C,EAC0CA,EAAII,cAC1C,2GAENC,IAAI,MAEN,wBAAKL,EAAGM,QACR,uBAAIN,EAAGO,cAXAP,EAAGQ,QADoB,IAgBlC,OAAO,8BAAGnB,IAAQ,wBAAKS,KACxB,C,8LClCDW,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAmB,mCAAG,oGACVF,EAAAA,EAAAA,IAAA,sCAAyCC,IAD/B,cAC3BE,EAD2B,yBAE1BA,EAASC,MAFiB,2CAAH,qDAKnBC,EAAU,mCAAG,8FAASC,EAAT,EAASA,GAAT,SACDN,EAAAA,EAAAA,IAAA,iBAAoBM,EAApB,oBAAkCL,IADjC,cAClBE,EADkB,yBAEjBA,EAASC,MAFQ,2CAAH,sDAKVlB,EAAS,mCAAG,8FAASoB,EAAT,EAASA,GAAT,SACAN,EAAAA,EAAAA,IAAA,iBAAoBM,EAApB,4BAA0CL,IAD1C,cACjBE,EADiB,yBAEhBA,EAASC,MAFO,2CAAH,sDAKTG,EAAY,mCAAG,8FAASD,EAAT,EAASA,GAAT,SACHN,EAAAA,EAAAA,IAAA,iBAAoBM,EAApB,4BAA0CL,IADvC,cACpBE,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKZI,EAAgB,mCAAG,WAAMC,GAAN,uFACPT,EAAAA,EAAAA,IAAA,4DACgCC,EADhC,kBACiDQ,EADjD,+CADO,cACxBN,EADwB,yBAIvBA,EAASC,MAJc,2CAAH,qD","sources":["components/Cast/Cast.jsx","components/api.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { fetchCast } from 'components/api';\nimport { useParams } from 'react-router-dom';\n\nconst Cast = () => {\n  const [cast, setCast] = useState(null);\n  const movieId = useParams();\n  useEffect(() => {\n    const getApiInfo = async () => {\n      try {\n        const cast = await fetchCast(movieId);\n        setCast(cast);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getApiInfo();\n  }, [movieId]);\n\n  const castArr = cast?.cast?.map(el => (\n    <li key={el.cast_id}>\n      <img\n        style={{ width: '200px' }}\n        src={\n          el?.profile_path\n            ? `https://image.tmdb.org/t/p/original${el?.profile_path}`\n            : 'https://abrakadabra.fun/uploads/posts/2021-12/1640528610_2-abrakadabra-fun-p-serii-chelovek-na-avu-2.jpg'\n        }\n        alt=\"\"\n      />\n      <h4>{el.name}</h4>\n      <p>{el.character}</p>\n    </li>\n  ));\n\n  return <>{cast && <ul>{castArr}</ul>}</>;\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'aa64369a7a4c070f2ae72e49aca3d158';\n\nexport const fetchDayPopularFilm = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchMovie = async ({ id }) => {\n  const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchCast = async ({ id }) => {\n  const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchReviews = async ({ id }) => {\n  const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchSearchMovie = async query => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}&include_adult=false&language=en-US&page=1`\n  );\n  return response.data;\n};\n"],"names":["useState","cast","setCast","movieId","useParams","useEffect","getApiInfo","fetchCast","console","log","castArr","map","el","style","width","src","profile_path","alt","name","character","cast_id","axios","API_KEY","fetchDayPopularFilm","response","data","fetchMovie","id","fetchReviews","fetchSearchMovie","query"],"sourceRoot":""}